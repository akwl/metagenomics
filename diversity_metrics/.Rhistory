uk[,which("Allowed.stay"==NA]
uk[,which("Allowed.stay"==NA)]
uk[,which("Allowed.stay"=="NA")]
uk[,which("Allowed.stay"=="30 days")]
uk[,which(uk$Allowed.stay=="30 days")]
uk[,which(uk$Allowed.stay == "30 days")]
uk[,which(uk$Allowed.stay == "90 days")]
which(uk$Allowed.stay == "90 days")
uk[which(uk$Allowed.stay=="NA"),]
uk[which(uk$Allowed.stay=="<NA>"),]
uk[which(uk$Allowed.stay==NA),]
which(uk$Allowed.stay==NA)
which(uk$Allowed.stay=="NA")
which(uk$Allowed.stay=="<NA>")
uk[,which(uk$Allowed.stay == "30 days")]
uk[which(uk$Allowed.stay == "30 days"),]
levels(uk$Allowed.stay)
uk[which(uk$Allowed.stay == "6 weeks"),"Allowed.stay"] = rep("42 days", length(which(uk$Allowed.stay == "6 weeks")))
which(uk$Allowed.stay == "6 weeks"
)
summary(uk$Allowed.stay)
rep("42 days", length(which(uk$Allowed.stay == "6 weeks")))
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),"Allowed.stay"]
uk$Allowed.stay[which(uk$Allowed.stay == "Freedom of movement (DK)")]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),"Allowed.stay"]
which(uk$Allowed.stay == "Freedom of movement (DK)")
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),"Allowed.stay"]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),Allowed.stay]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),"Allowed.stay"]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),4]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),3]
uk[which(uk$Allowed.stay == "Freedom of movement (DK)"),4]
uk = data.frame(read.csv(file.choose()))
uk = data.frame(read.csv(file.choose()))
uk = read.csv(file.choose())
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis")
library(scales)
library(ggplot2)
library(reshape2)
library(ggrepel)
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "#FFFFFF",
high = "#012345") + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
#Balloon plot of relative abundance of top GENUSES for each sample
library(ggpubr)
#Significance of differences of each GENUS between different days
level_6 = read.csv("level-6.csv")
genuses = level_6[,-c(1,72,73,76)]
day_1_genuses = genuses[which(level_6[,"Sampling.Day.."] == 1),]
day_16_genuses = genuses[which(level_6[,"Sampling.Day.."] == 16),]
day_31_genuses = genuses[which(level_6[,"Sampling.Day.."] == 31),]
day_1_genuses_sum = colSums(day_1_genuses)
day_16_genuses_sum = colSums(day_16_genuses)
day_31_genuses_sum = colSums(day_31_genuses)
all_days_genuses_sum = rbind(day_1_genuses_sum, day_16_genuses_sum, day_31_genuses_sum)[,-c(71,72)]
all_days_genuses_sum = all_days_genuses_sum[,order(colSums(all_days_genuses_sum), decreasing = FALSE)]
all_days_genuses_sum_melted = melt(all_days_genuses_sum[,c(ncol(all_days_genuses_sum)-(10:1),ncol(all_days_genuses_sum))])
all_days_genuses_sum_melted[,"value"] = sqrt(all_days_genuses_sum_melted[,"value"])
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "#FFFFFF",
high = "#012345") + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(colours = c("white", "blue", "red"), values = c(0,0.1,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,0.1,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,250,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,250,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,100,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,10,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,0.1,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,1,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,0.1,600)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
summary(all_days_genuses_sum_melted$Var2)
summary(all_days_genuses_sum_melted$Var1)
summary(all_days_genuses_sum_melted)
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,81.38,154.52)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,103.36,500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,103.36,500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(0,65.54,500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
summary(all_days_genuses_sum_melted$value)
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(65.54,103.36500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("white", "blue", "red"), values = c(65.54,103.36,500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "Red",
high = "#012345") + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "Red",
high = "Blue") + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
help("scale_fill_gradientn")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient(colours = c("Blue", "White", "Red"), values = c(65.54,103.36,500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(65.54,103.36,500.88)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,103.36,600)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,65.54,600)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,81.38,154.52)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_density()
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = value, fill = value)) +
geom_density()
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var2, y = value, fill = value)) +
geom_density()
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var2, y = Var1, fill = value)) +
geom_density()
head(all_days_genuses_sum_melted)
ggplot(all_days_genuses_sum_melted, mapping = aes(x = value, fill = value)) +
geom_density()
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,250,500)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,125,250)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,10,250)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,1,250)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Sky Blue", "White", "Salmon"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Sky Blue", "White", "Salmon"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Aquamarine", "White", "Salmon"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Midnight Blue", "White", "Scarlet"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Midnight Blue", "White", "Scarlet"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Steel Blue", "White", "Scarlet"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Orange", "White", "Deeppink"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
ggplot(all_days_genuses_sum_melted, mapping = aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradientn(colours = c("Blue", "White", "Red"), values = c(0,0.5,1)) + # limits = c(0,600)
scale_x_discrete("Day", labels = c("Day 1", "Day 16", "Day 31")) +
ylab("Species") +
labs(fill = "Square root of relative abundance")
setwd("C:\Users\Dell\OneDrive - University College London\Courses\BIOC0023 Specialist Research Project in Metagenomics\Submissions & Assessments\Essay\Data Analysis\diversity_metrics")
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/")
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/C:\Users\Dell\OneDrive - University College London\Courses\BIOC0023 Specialist Research Project in Metagenomics\Submissions & Assessments\Essay\Data Analysis/diversity_metrics")
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/C:\Users\Dell\OneDrive - University College London\Courses\BIOC0023 Specialist Research Project in Metagenomics\Submissions & Assessments\Essay\Data Analysis/diversity_metrics")
diversity_metrics
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/diversity_metrics")
ls()
#Alpha
chao1.ci = read.table("alpha/chao1_ci-vector.tsv")
#Alpha
chao1.ci = read.table("chao1_ci-vector.tsv")
#Alpha
chao1.ci = read.table(alpa/"chao1_ci-vector.tsv")
#Alpha
chao1.ci = read.table(alpha/"chao1_ci-vector.tsv")
#Alpha
chao1.ci = read.table("./alpha/chao1_ci-vector.tsv")
#Alpha
chao1.ci = read.table("alpha/chao1_ci-vector.tsv")
pwd
pwd()
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/diversity_metrics")
#Alpha
chao1.ci = read.table("alpha/chao1_ci-vector.tsv")
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/diversity_metrics/alpha")
#Alpha
chao1.ci = read.table("alpha/chao1_ci-vector.tsv")
#Alpha
chao1.ci = read.table("chao1_ci-vector.tsv")
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/diversity_metrics")
#Alpha
chao1.ci = read.table("alpha/chao1_ci-vector.tsv", fill = TRUE)
summary(chao1.ci)
!is.na(chao1.ci)
length(is.na(chao1.ci))
is.na(chao1.ci)
length(is.na(chao1.ci) == TRUE )
which(is.na(chao1.ci) == TRUE )
which(!is.na(chao1.ci) == TRUE )
chao1 = read.table("alpha/chao1-vector.tsv", fill = TRUE)
faith.pd = read.table("alpha/faith_pd-vector.tsv", fill = TRUE)
goods.coverage = read.table("alpha/goods_coverage-vector.tsv", fill = TRUE)
observed.otus = read.table("alpha/observed_otus-vector.tsv", fill = TRUE)
shannon = read.table("alpha/shannon-vector.tsv", fill = TRUE)
#Beta
bray.curtis = read.table("beta/bray_curtis-distance_matrix.tsv", fill = TRUE)
generalised.unifrac = read.table("beta/generalized_unifrac-distance_matrix.tsv", fill = TRUE)
jaccard = read.table("beta/jaccard-distance_matrix.tsv", fill = TRUE)
unweighted.unifrac = read.table("beta/unweighted_unifrac-distance.tsv", fill = TRUE)
unweighted.unifrac = read.table("beta/unweighted_unifrac-distance_matrix.tsv", fill = TRUE)
head(unweighted.unifrac)
weigthed.normalized.unifrac = = read.table("beta/weighted_normalized_unifrac-distance_matrix", fill = TRUE)
weigthed.normalized.unifrac = read.table("beta/weighted_normalized_unifrac-distance_matrix", fill = TRUE)
weigthed.normalized.unifrac = read.table("beta/weighted_normalized_unifrac-distance_matrix.tsv", fill = TRUE)
weighted.unifrac = read.table("beta/weighted_unifrac-distance_matrix.tsv", fill = TRUE)
dimnames(chao1.ci)
dimnames(chao1)
boxplot(chao1)
which(level_3[,"Oil.Pulling...Before..2..or.After..1.."]
)
#Level 3
level_3 = read.csv("level-3.csv")
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis")
#Level 3
level_3 = read.csv("level-3.csv")
which(level_3[,"Oil.Pulling...Before..2..or.After..1.."]
)
which(level_3[,"Oil.Pulling...Before..2..or.After..1.."] == 1)
level_3[,1]
level_3[which(level_3[,"Oil.Pulling...Before..2..or.After..1.."] == 1),"Oil.Pulling...Before..2..or.After..1.."]
level_3[which(level_3[,"Oil.Pulling...Before..2..or.After..1.."] == 1), 1]
length(level_3[which(level_3[,"Oil.Pulling...Before..2..or.After..1.."] == 1), 1])
length(level_3[which(level_3[,"Oil.Pulling...Before..2..or.After..1.."] == 2), 1])
level_3[which(level_3[,"Oil.Pulling...Before..2..or.After..1.."] == 2), 1]
level_3[which(level_3[,"Sampling.Day.."] == 1), 1]
level_3[which(level_3[,"Sampling.Day.."] == 1), 16]
level_3[which(level_3[,"Sampling.Day.."] == 16), 1]
level_3[which(level_3[,"Sampling.Day.."] == 31), 1]
setwd("C:/Users/Dell/OneDrive - University College London/Courses/BIOC0023 Specialist Research Project in Metagenomics/Submissions & Assessments/Essay/Data Analysis/diversity_metrics")
sampling.day.1 = c("515rcbc257", "515rcbc263", "515rcbc479", "515rcbc454", "515rcbc239", "515rcbc254", "515rcbc251", "515rcbc245", "515rcbc269", "515rcbc242", "515rcbc467", "515rcbc461", "515rcbc482", "515rcbc266", "515rcbc248", "515rcbc458")
sampling.day.16 = c("515rcbc255", "515rcbc267", "515rcbc264", "515rcbc495", "515rcbc243", "515rcbc464", "515rcbc240", "515rcbc249", "515rcbc470", "515rcbc261", "515rcbc252", "515rcbc480", "515rcbc456", "515rcbc462", "515rcbc270", "515rcbc258", "515rcbc483")
sampling.day.31 = c("515rcbc247", "515rcbc496", "515rcbc484", "515rcbc271", "515rcbc472", "515rcbc259", "515rcbc265", "515rcbc256", "515rcbc466", "515rcbc457", "515rcbc471", "515rcbc262", "515rcbc478", "515rcbc465", "515rcbc253", "515rcbc268", "515rcbc493", "515rcbc241", "515rcbc250", "515rcbc244", "515rcbc477")
after.oil.pulling = c("515rcbc257", "515rcbc263", "515rcbc479", "515rcbc239", "515rcbc251", "515rcbc245", "515rcbc269", "515rcbc461", "515rcbc264", "515rcbc464", "515rcbc240", "515rcbc470", "515rcbc252", "515rcbc480", "515rcbc270", "515rcbc258", "515rcbc247", "515rcbc271", "515rcbc472", "515rcbc259", "515rcbc265", "515rcbc466", "515rcbc478", "515rcbc253", "515rcbc493", "515rcbc241")
before.oil.pulling = c("515rcbc454", "515rcbc254", "515rcbc242", "515rcbc467", "515rcbc482", "515rcbc266", "515rcbc248", "515rcbc458", "515rcbc255", "515rcbc267", "515rcbc495", "515rcbc243", "515rcbc249", "515rcbc261", "515rcbc456", "515rcbc462", "515rcbc483", "515rcbc496", "515rcbc484", "515rcbc256", "515rcbc457", "515rcbc471", "515rcbc262", "515rcbc465", "515rcbc268", "515rcbc250", "515rcbc244", "515rcbc477")
chao1.ci[sampling.day.1,]
chao1.ci[as.character(sampling.day.1),]
chao1.ci[as.character(sampling.day.1),]
chao1.ci[sampling.day.1,]
chao1[sampling.day.1,]
wilcoxon.test(chao1[sampling.day.1,],chao1[sampling.day.16,], paired = FALSE)
wilcox.test(chao1[sampling.day.1,],chao1[sampling.day.16,], paired = FALSE)
wilcox.test(chao1[sampling.day.16,],chao1[sampling.day.31,], paired = FALSE)
wilcox.test(chao1[sampling.day.16,],chao1[sampling.day.31,], paired = FALSE)$p.value
wilcox.test(chao1[sampling.day.1,],chao1[sampling.day.16,], paired = FALSE)$p.value
wilcox.test(chao1[before.oil.pulling,],chao1[after.oil.pulling,], paired = FALSE)$p.value
alpha.before.after = function(metric){
wilcox.test(metric[before.oil.pulling,],metric[after.oil.pulling,], paired = FALSE)$p.value
}
alpha.before.after(faith.pf)
alpha.before.after(faith.pd)
alpha.before.after(goods.coverage)
alpha.before.after(observed)
alpha.before.after(observed.otus)
alpha.before.after(shannon)
rm(alpha.before.after)
alpha.batch = function(metric){
wilcox.test(metric[before.oil.pulling,],metric[after.oil.pulling,], paired = FALSE)$p.value
}
wilcox.test(metric[sampling.day.16,],metric[sampling.day.31,], paired = FALSE)$p.value
alpha.batch = function(metric){
wilcox.test(metric[sampling.day.1,],metric[sampling.day.16,], paired = FALSE)$p.value
wilcox.test(metric[sampling.day.16,],metric[sampling.day.31,], paired = FALSE)$p.value
}
alpha.batch(chao1)
alpha.batch = function(metric){
print(wilcox.test(metric[sampling.day.1,],metric[sampling.day.16,], paired = FALSE)$p.value)
print(wilcox.test(metric[sampling.day.16,],metric[sampling.day.31,], paired = FALSE)$p.value)
}
alpha.batch(chao1)
alpha.batch(faith.pd)
alpha.batch(goods.coverage)
alpha.batch(observed.otus)
alpha.batch(shannon)
alpha.batch(faith.pd)
faith.pd[sampling.day.1]
faith.pd[sampling.day.1,]
faith.pd[sampling.day.16,]
rank(faith,pd, ties.method = average)
rank(faith.pd, ties.method = average)
rank(faith.pd, ties.method = "average")
rank(faith.pd[sampling.day.1,], ties.method = "average")
rank(faith.pd[sampling.day.16,], ties.method = "average")
alpha.batch(faith.pd)
chao1.ci
library(reshape2)
chao1.ci.melted = melt(chao1.ci)
head(chao1.ci.melted))
head(chao1.ci.melted)
help(h.test)
alpha.anova.batch = function(metric){
print(kruskal.test(metric[sampling.day.1,], metric[sampling.day.16,], metric[sampling.day.31,]))
}
alpha.anova.batch(faith.pd)
intersect(sampling.day.1, sampling.day.16)
intersect(sampling.day.1, before.oil.pulling)
alpha.anova.batch = function(metric){
print(kruskal.test(metric[sampling.day.1,], metric[sampling.day.16,], metric[sampling.day.31,]))
}
alpha.anova.batch(faith.pd)
alpha.batch = function(metric){
print(wilcox.test(metric[intersect(sampling.day.1, before.oil.pulling),],metric[intersect(sampling.day.1, after.oil.pulling),], paired = FALSE)$p.value)
print(wilcox.test(metric[intersect(sampling.day.16, before.oil.pulling),],metric[intersect(sampling.day.16, after.oil.pulling),], paired = FALSE)$p.value)
print(wilcox.test(metric[intersect(sampling.day.31, before.oil.pulling),],metric[intersect(sampling.day.31, after.oil.pulling),], paired = FALSE)$p.value)
}
alpha.batch(faith.pd)
alpha.batch(chao1.ci)
alpha.batch(chao1)
alpha.batch(faith.pd)
alpha.batch(goods.coverage)
alpha.batch(observed.otus)
alpha.batch(shannon)
help(qq)
qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling))
qq(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling))
qq(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling)])
qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling)])
qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling),])
abline(y~x)
abline(y~x, color = "black")
abline(y~x, col = "black")
abline(lm(y~x), col = "black")
abline(lm(faith.pd[intersect(sampling.day.1, before.oil.pulling),] ~ faith.pd[intersect(sampling.day.1, after.oil.pulling),]), col = "black")
abline(lm(seq(1,10,1)~seq(1,10,1)), col = "black")
qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling),])
summary(qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],faith.pd[intersect(sampling.day.1, after.oil.pulling),]))
summary(qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],qnorm(seq(0.01,0.99,0.01)),]))
summary(qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],qnorm(seq(0.01,0.99,0.01))))
qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],qnorm(seq(0.01,0.99,0.01)))
boxplot(faith.pd)
qqplot(faith.pd[intersect(sampling.day.1, before.oil.pulling),],qnorm(seq(0.01,0.99,0.01)))
qqnorm(faith.pd[intersect(sampling.day.1, before.oil.pulling),])
abline(rnorm(0,1)~rnorm(0,1))
abline(rnorm(10,1)~rnorm(10,1))
abline(1:10~1:10)
abline(1:10~-1.5:1.5)
abline(0:100~-1.5:1.5)
abline(seq(0,100,1)~seq(-1.5,1.5,1))
summary(abline(seq(0,100,1)~seq(-1.5,1.5,1)))
qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),], col = "steelblue")
qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),], col = "steelblue", lwd = 2)
summary(qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),]))
abline(qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),]))
summary(abline(qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),])))
qqnorm(faith.pd[intersect(sampling.day.1, before.oil.pulling),])
abline(qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),]))
lm(qqline(faith.pd[intersect(sampling.day.1, before.oil.pulling),]))
rnorm(mean(faith.pd),(sd(faith.pd))^2)
help(rnorm)
rnorm(1000,mean(faith.pd),(sd(faith.pd))^2)
rnorm(10,mean(faith.pd),(sd(faith.pd))^2)
rnorm(10,mean(faith.pd),sd(faith.pd))
sd(faith.pd)
sd(as.numeric(faith.pd))
class(faith.pd)
rnorm(10,mean(faith.pd[intersect(sampling.day.1, before.oil.pulling),]),sd(faith.pd[intersect(sampling.day.1, before.oil.pulling),]))
lm(faith.pd[intersect(sampling.day.1, before.oil.pulling),] ~ rnorm(10,mean(faith.pd[intersect(sampling.day.1, before.oil.pulling),]),sd(faith.pd[intersect(sampling.day.1, before.oil.pulling),])))
length(faith.pd[intersect(sampling.day.1, before.oil.pulling),])
lm(faith.pd[intersect(sampling.day.1, before.oil.pulling),] ~ rnorm(8,mean(faith.pd[intersect(sampling.day.1, before.oil.pulling),]),sd(faith.pd[intersect(sampling.day.1, before.oil.pulling),])))
qqnorm(faith.pd[intersect(sampling.day.16, before.oil.pulling),])
qqline(faith.pd[intersect(sampling.day.16, before.oil.pulling),], col = "steelblue", lwd = 2)
qqnorm(faith.pd[intersect(sampling.day.1, after.oil.pulling),])
qqline(faith.pd[intersect(sampling.day.1, after.oil.pulling),], col = "steelblue", lwd = 2)
qqnorm(faith.pd[intersect(sampling.day.16, before.oil.pulling),])
qqline(faith.pd[intersect(sampling.day.16, before.oil.pulling),], col = "steelblue", lwd = 2)
